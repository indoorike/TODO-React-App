{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","onSearch","e","keyCode","console","log","target","value","type","placeholder","onKeyDown","this","Component","TodoListItem","_this$props","props","label","onDeleted","important","onToggleDone","onToggleImportant","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","ItemAddForm","state","onLabelChange","_this","setState","onSubmit","preventDefault","onItemAdded","onChange","App","maxId","todoData","createTodoItem","deleteItem","filter","addItem","text","newItem","_ref2","concat","toConsumableArray","_ref3","toggleProperty","_ref4","arr","propName","idx","findIndex","el","oldItem","objectSpread","defineProperty","slice","doneCount","length","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.018ba663.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\n// React Component\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\n// React Component\r\nexport default class SearchPanel extends Component {\r\n    \r\n    //\r\n    onSearch = (e) => {\r\n        if (e.keyCode === 13) {\r\n            console.log(e.target.value);\r\n        }\r\n    };\r\n\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <input type=\"text\" className=\"form-control search-input\" \r\n                placeholder=\"type to search\" onKeyDown={ this.onSearch } />\r\n        );\r\n    }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, {Component} from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    /**\r\n     * Основной метод рендеринга\r\n     *\r\n     * @return  {void} \r\n     */\r\n    render() {\r\n        // Деструктуризация параметров компонента\r\n        const { label, onDeleted, done, important, onToggleDone, onToggleImportant } = this.props;\r\n        \r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n                <span className=\"todo-list-item-label\" onClick={ onToggleDone }>\r\n                    { label }\r\n                </span>\r\n    \r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\" onClick={ onToggleImportant }>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\" onClick={ onDeleted }>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\n// React Component\r\nconst TodoList = ( {todos, onDeleted, onToggleImportant, onToggleDone} ) => {\r\n    //\r\n    const elements = todos.map( (item) => {\r\n        // Деструктуризация массива поэлементно на id и всё остальное\r\n        const { id, ...itemProps } = item;\r\n        \r\n        return (\r\n            <li key={ id } className=\"list-group-item\">\r\n                <TodoListItem {...itemProps} onDeleted={ () => onDeleted(id) }\r\n                    onToggleImportant={ () => onToggleImportant(id) }\r\n                    onToggleDone={ () => onToggleDone(id) } />\r\n            </li>\r\n        );\r\n    });\r\n    \r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    //\r\n    render() {\r\n        return (\r\n            <div className = \"btn-group\">\r\n                <button type = \"button\" className = \"btn btn-info\">All</button> \r\n                <button type = \"button\" className = \"btn btn-outline-secondary\">Active</button>\r\n                <button type = \"button\" className = \"btn btn-outline-secondary\">Done</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            // Т.к. стэйт не зависит от предыдущего значения, можно передать значение напрямую\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        // Отмена перезагрузки страницы\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        // Очистка поля после сабмита\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n    \r\n    //\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n                <input type=\"text\" className=\"form-control\" value={this.state.label} \r\n                    onChange={this.onLabelChange} placeholder=\"What needs to be done\" />\r\n                <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n            </form>\r\n        );\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\n// App components\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\n// App style\r\nimport './app.css';\r\n\r\n// Main Component\r\nexport default class App extends Component {\r\n    \r\n    // Генератор ID\r\n    maxId = 100;\r\n    \r\n    state = {\r\n        // Основные данные приложения\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a dinner'),\r\n            this.createTodoItem('Have a lunch')\r\n        ]\r\n    };\r\n\r\n    // Метод создания нового объекта\r\n    createTodoItem(label) {\r\n        return {\r\n            id:  this.maxId++, // Generated UID\r\n            label,\r\n            important: false,\r\n            done: false\r\n        };\r\n    }\r\n\r\n    // Удаление элемента из массива данных\r\n    deleteItem = (id) => {\r\n        this.setState( ({todoData}) => {\r\n            /* const idx = todoData.findIndex((el) => el.id === id);\r\n            const newTodoData = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ]; */\r\n\r\n            // const newTodoData = todoData.filter((value, key) => {return key !== idx});\r\n            const newTodoData = todoData.filter((value) => value.id !== id);\r\n            \r\n            return {\r\n                todoData: newTodoData\r\n            };\r\n        });\r\n    };\r\n\r\n    // Добавление нового элемента в массив данных\r\n    addItem = (text) => {\r\n        \r\n        const newItem = this.createTodoItem(text);\r\n        \r\n        this.setState( ({todoData}) => {\r\n            // Add Element in Array\r\n            const newTodoData = [...todoData, newItem];\r\n\r\n            return {\r\n                todoData: newTodoData\r\n            };\r\n        });\r\n    };\r\n\r\n    // \"Переключатель\" параметров у элемента\r\n    toggleProperty(arr, id, propName) {\r\n        // получение индекса у элемента для изменения параметра\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        // Определенный элемент массива\r\n        const oldItem = arr[idx];\r\n        // Новый массив с элементами, включающий старый массив + новый элемент массива\r\n        //   с измененным параметром (состоянием)\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        // Construct new Array\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    // \"Переключатель\" параметра important\r\n    onToggleImportant = (id) => {\r\n        this.setState( ({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n    \r\n    // \"Переключатель\" параметра done\r\n    onToggleDone = (id) => {\r\n        this.setState( ({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    //\r\n\r\n    \r\n    render() {\r\n        // Счетчики выполненных и оставшихся заданий\r\n        const doneCount = this.state.todoData.filter(el => el.done).length;\r\n        const todoCount = this.state.todoData.length - doneCount;\r\n        \r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearch={() => console.log('Event onSearch() was called!')} />\r\n                    <ItemStatusFilter />\r\n                </div>\r\n                <TodoList \r\n                    todos={ this.state.todoData } \r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleImportant={ this.onToggleImportant }\r\n                    onToggleDone={ this.onToggleDone } \r\n                />\r\n                <ItemAddForm onItemAdded={ this.addItem } />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\n// Render React App\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}